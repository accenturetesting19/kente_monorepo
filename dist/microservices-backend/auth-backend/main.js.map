{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;;;;;ACAA,wCAAwC;AAExC,0DAA6F;AAC7F,+CAAsE;AAmB/D,IAAM,SAAS,GAAf,MAAM,SAAS;CAAG;AAAZ,8BAAS;oBAAT,SAAS;IAlBrB,mBAAM,EAAC;QACN,OAAO,EAAE,EAAE;QACX,WAAW,EAAE,CAAC,mDAAwB,CAAC;QACvC,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,gBAAgB;gBACzB,UAAU,EAAE,GAAG,EAAE;oBACf,OAAO,kCAAkB,CAAC,MAAM,CAAC;wBAC/B,SAAS,EAAE,yBAAS,CAAC,GAAG;wBACxB,OAAO,EAAE;4BACP,IAAI,EAAE,WAAW;4BACjB,IAAI,EAAE,IAAI;yBACX;qBACF,CAAC,CAAC;gBACL,CAAC;aACF;SACF;KACF,CAAC;GACW,SAAS,CAAG;;;;;;;ACtBzB;;;;;;ACAA;;;;;;;;;;;ACAA,wCAAiF;AACjF,+CAAoD;AACpD,yCAA0C;AAGnC,IAAM,wBAAwB,GAA9B,MAAM,wBAAwB;IACnC,YAA8C,MAAmB;QAAnB,WAAM,GAAN,MAAM,CAAa;IAAG,CAAC;IAErE,IAAI,CAAiB,KAAa;QAChC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CACrB,EAAE,GAAG,EAAE,qBAAqB,EAAE,IAAI,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC,EAAE,EAClE,KAAK,CACN,CAAC;IACJ,CAAC;IAED,KAAK,CAAuB,WAAmB;QAC7C,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CACrB,EAAE,GAAG,EAAE,iCAAiC,EAAE,EAC1C,WAAW,CACZ,CAAC;IACJ,CAAC;CACF;AAhBY,4DAAwB;AAGnC;IADC,iBAAI,EAAC,QAAQ,CAAC;IACT,qCAAK,EAAC,OAAO,CAAC;;;;oDAKnB;AAED;IADC,gBAAG,EAAC,uBAAuB,CAAC;IACtB,qCAAK,EAAC,aAAa,CAAC;;;;qDAK1B;mCAfU,wBAAwB;IAFpC,uBAAU,EAAC,gBAAgB,CAAC;IAC5B,qBAAO,EAAC,4BAA4B,CAAC;IAEvB,sCAAM,EAAC,gBAAgB,CAAC;iEAAiB,2BAAW,oBAAX,2BAAW;GADtD,wBAAwB,CAgBpC;;;;;;;ACrBD;;;;;;ACAA;;;;;;;;;ACAA,sDAA0C;;;;;;;;;;;ACA1C,wCAAwC;AACxC,sCAAwC;AAGxC,kDAAuE;AACvE,+CAAsD;AACtD,kDAAwD;AAExD,6CAA8C;AAC9C,yCAA8C;AAoBvC,IAAM,iBAAiB,GAAvB,MAAM,iBAAiB;CAAG;AAApB,8CAAiB;4BAAjB,iBAAiB;IAnB7B,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,qBAAY,CAAC,OAAO,CAAC;gBACnB,WAAW,EAAE,CAAC,cAAc,EAAC,iBAAiB,EAAE,gBAAgB,EAAE,MAAM,CAAC;gBACzE,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,IAAI;aACZ,CAAC;YACF,eAAS,CAAC,QAAQ,CAAC;gBACjB,MAAM,EAAE,IAAI;gBACZ,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;gBACxC,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;aACjC,CAAC;SACH;QACD,WAAW,EAAE,CAAC,yCAAuB,CAAC;QACtC,SAAS,EAAE;YACT,0BAAW,EAAC,GAAG,wBAAW,EAAE,GAAG,0BAAQ;SACxC;QACD,OAAO,EAAE,EAAE;KACZ,CAAC;GACW,iBAAiB,CAAG;;;;;;;AC7BjC;;;;;;;;;;;;;ACAA,wCAA8F;AAC9F,+CAAuD;AACvD,+CAAuD;AAIhD,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAClC,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAG,CAAC;IACzC,4CAA4C;IAC5C,wCAAwC;IAElC,KAAD,CAAC,QAAQ,CAAC,EAAU;QACvB,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAED,eAAe,CAAC,EAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;CACF;AAZY,0DAAuB;AAK5B;IADL,kCAAc,EAAC,EAAE,GAAG,EAAE,qBAAqB,EAAE,IAAI,EAAE,CAAC,OAAO,EAAC,MAAM,EAAC,SAAS,CAAC,EAAE,CAAC;;;;uDAGhF;AAED;IADC,kCAAc,EAAC,EAAE,GAAG,EAAE,iCAAiC,EAAE,CAAC;;;;8DAG1D;kCAXU,uBAAuB;IADnC,uBAAU,EAAC,oBAAoB,CAAC;iEAEL,0BAAW,oBAAX,0BAAW;GAD1B,uBAAuB,CAYnC;;;;;;;;;;;;AClBD,sDAAsD;AACtD,uDAAuD;AACvD,wCAAwE;AAExE,sCAAyC;AAElC,IAAM,WAAW,GAAjB,MAAM,WAAW;IACtB,YAC+B,IAAuB,EAC5C,UAAsB;QADD,SAAI,GAAJ,IAAI,CAAmB;QAC5C,eAAU,GAAV,UAAU,CAAY;IAC7B,CAAC;IACJ,KAAK,CAAC,MAAM,CAAC,MAAc;QACzB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;gBACL,MAAM,EAAE;oBACN,IAAI,EAAE,mBAAU,CAAC,SAAS;oBAC1B,KAAK,EAAE,CAAC,+BAA+B,CAAC;oBACxC,MAAM,EAAE,MAAM;iBACf;aACF,CAAC;SACH;QACD,OAAO,EAAE,YAAY,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;IAC1E,CAAC;IACD,KAAK,CAAC,aAAa,CAAC,MAAc;QAChC,IAAI;YACF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACpD,IAAI,MAAM;gBAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;SACpC;QAAC,OAAM,KAAK,EAAE;YACb,eAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YACnB,eAAM,CAAC,GAAG,CAAC,KAAK,CAAC;YACjB,OAAO;gBACL,MAAM,EAAE;oBACN,IAAI,EAAE,mBAAU,CAAC,QAAQ;oBACzB,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;IACH,CAAC;CACF;AAjCY,kCAAW;sBAAX,WAAW;IADvB,uBAAU,GAAE;IAGR,sCAAM,EAAC,WAAW,CAAC;yEACA,gBAAU,oBAAV,gBAAU;GAHrB,WAAW,CAiCvB;;;;;;;;;;ACvCD,8CAAoE;AACvD,gBAAQ,GAAG;IACtB;QACE,OAAO,EAAE,WAAW;QACpB,QAAQ,EAAE,wBAAU;KACrB;CACF,CAAC;;;;;;;;;;;ACNF,4CAAsC;AACtC,uDAAwE;AAMjE,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,4BAAiB;CAUhD;AAVY,gCAAU;AAKd;IAJN,iCAAU;IACV,iCAAM,EAAC;QACN,IAAI,EAAE,qBAAS,CAAC,MAAM;KACvB,CAAC;;0CACqB;AAIhB;IAHN,iCAAM,EAAC;QACN,IAAI,EAAE,qBAAS,CAAC,MAAM;KACvB,CAAC;;wCACmB;qBATV,UAAU;IALtB,gCAAK,EAAC;QACL,SAAS,EAAE,gBAAgB;QAC3B,MAAM,EAAE,MAAM;KAEf,CAAC;GACW,UAAU,CAUtB;;;;;;;ACjBD;;;;;;ACAA;;;;;;;;;ACAA,uDAAiD;AACjD,2CAA8C;AAC9C,yCAA+C;AAClC,mBAAW,GAAG;IACzB;QACE,OAAO,EAAE,WAAW;QACpB,MAAM,EAAE,CAAC,sBAAa,CAAC;QACvB,UAAU,EAAE,KAAK,EAAE,MAAqB,EAAE,EAAE;YAC1C,MAAM,SAAS,GAAG,IAAI,gCAAS,CAAC;gBAC9B,OAAO,EAAE,UAAU;gBACnB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBACzB,IAAI,EAAE,QAAQ,CAAS,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC3C,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBAC7B,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;gBACjC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;gBACjC,yBAAyB,EAAE,KAAK;gBAChC,cAAc,EAAE;oBACd,iBAAiB,EAAE,QAAQ;iBAC5B;gBACD,MAAM,EAAE;oBACN,eAAe,EAAE,IAAI;oBACrB,SAAS,EAAE,KAAK;oBAChB,SAAS,EAAE,KAAK;iBACjB;aACF,CAAC,CAAC;YACH,SAAS,CAAC,SAAS,CAAC,mBAAQ,CAAC,CAAC;YAC9B,OAAO,SAAS,CAAC;QACnB,CAAC;KACF;CACF,CAAC;;;;;;;;;;AC7BF,8CAA4D;AAE/C,gBAAQ,GAAG;IACpB,wBAAU;CACb;;;;;;;ACJD;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;;;GAGG;AACH,sCAA2C;AAC3C,4CAA6C;AAC7C,wCAAwD;AACxD,+CAAkD;AAClD,8CAA6D;AAC7D,yCAAiE;AACjE,KAAK,UAAU,SAAS;IACtB,oCAAoC;IACpC,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,gCAAiB,CAAC,CAAC;IACxD,GAAG,CAAC,mBAAmB,CAAC;QACtB,SAAS,EAAE,yBAAS,CAAC,GAAG;QACxB,OAAO,EAAE;YACP,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,IAAI;SACX;KACF,CAAC,CAAC;IACH,mBAAmB;IACnB,MAAM,MAAM,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC,CAAC;IACnD,uBAAuB;IACvB,MAAM,MAAM,GAAG,IAAI,yBAAe,EAAE;SACjC,QAAQ,CAAC,6CAA6C,CAAC;SACvD,cAAc,CAAC,mBAAmB,CAAC;SACnC,UAAU,CAAC,KAAK,CAAC;SACjB,MAAM,CAAC,gBAAgB,CAAC;SACxB,KAAK,EAAE,CAAC;IACX,MAAM,QAAQ,GAAG,uBAAa,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC9D,uBAAa,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;IAC7C,GAAG,CAAC,cAAc,CAAC,IAAI,uBAAc,EAAE,CAAC,CAAC;IACzC,MAAM,GAAG,CAAC,qBAAqB,EAAE,CAAC;IAClC,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1B,eAAM,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;AAC1C,CAAC;AACD,SAAS,EAAE,CAAC","sources":["webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///./src/app/client-auth/controller/microservices.controller.ts","webpack:///external commonjs \"@nestjs/microservices\"","webpack:///external commonjs \"@nestjs/swagger\"","webpack:///../../microservices-libs/auth-library/src/index.ts","webpack:///../../microservices-libs/auth-library/src/lib/auth-library.module.ts","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///../../microservices-libs/auth-library/src/lib/controller/auth.controller.ts","webpack:///../../microservices-libs/auth-library/src/lib/services/auth.service.ts","webpack:///../../microservices-libs/auth-library/src/lib/repository/auth.repository.ts","webpack:///../../microservices-libs/auth-library/src/lib/entity/entity.container/auth.entity.ts","webpack:///external commonjs \"sequelize\"","webpack:///external commonjs \"sequelize-typescript\"","webpack:///../../microservices-libs/auth-library/src/lib/db/db.connect.ts","webpack:///../../microservices-libs/auth-library/src/lib/entity/entities.ts","webpack:///external commonjs \"@nestjs/config\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/core\");","import { Module } from \"@nestjs/common\";\nimport { AuthLibraryModule } from \"@kente-mono/auth-library\";\nimport { authenticationController } from \"./client-auth/controller/microservices.controller\";\nimport { ClientProxyFactory, Transport } from \"@nestjs/microservices\";\n@Module({\n  imports: [],\n  controllers: [authenticationController],\n  providers: [\n    {\n      provide: \"AUTHENTICATION\",\n      useFactory: () => {\n        return ClientProxyFactory.create({\n          transport: Transport.TCP,\n          options: {\n            host: \"localhost\",\n            port: 4000,\n          },\n        });\n      },\n    },\n  ],\n})\nexport class AppModule {}\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","import { Controller, Get, Inject, Param, Post, UseGuards } from \"@nestjs/common\";\nimport { ClientProxy } from \"@nestjs/microservices\";\nimport { ApiTags } from \"@nestjs/swagger\";\n@Controller(\"authentication\")\n@ApiTags('Kente client microservices')\nexport class authenticationController {\n  constructor(@Inject(\"AUTHENTICATION\") private client: ClientProxy) {}\n  @Post(\":mtnId\")\n  auth(@Param(\"mtnId\") mtnId: string) {\n    return this.client.send(\n      { cmd: \"MTN_ID_VERIFICATION\", role: [\"admin\", \"user\", \"manager\"] },\n      mtnId\n    );\n  }\n  @Get(\"validate/:accessToken\")\n  valid(@Param(\"accessToken\") accessToken: string) {\n    return this.client.send(\n      { cmd: \"MTN_ID_ACCESS_TOKEN_VERIFCATION\" },\n      accessToken\n    );\n  }\n}\n","module.exports = require(\"@nestjs/microservices\");","module.exports = require(\"@nestjs/swagger\");","export * from './lib/auth-library.module';\n","import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './contants/auth.jwt.constants';\nimport { APP_GUARD } from '@nestjs/core';\nimport { microservicesController } from './controller/auth.controller';\nimport { authService } from './services/auth.service';\nimport { AuthRepo } from './repository/auth.repository';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { DbConnector } from './db/db.connect';\nimport { ConfigModule } from '@nestjs/config';\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: ['stagging.env','development.env', 'production.env', '.env'],\n      isGlobal: true,\n      cache: true,\n    }),\n    JwtModule.register({\n      global: true,\n      secret: process.env[\"JWT_ACCESS_SECRET\"],\n      signOptions: { expiresIn: '1m' },\n    }),\n  ],\n  controllers: [microservicesController],\n  providers: [\n    authService,...DbConnector, ...AuthRepo,\n  ],\n  exports: [],\n})\nexport class AuthLibraryModule {}\n","module.exports = require(\"@nestjs/jwt\");","import { Controller, HttpCode, HttpStatus, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { authService } from '../services/auth.service';\nimport { AuthInterceptor } from '../interceptors/auth.interceptor';\n\n@Controller('microservices-auth')\nexport class microservicesController {\n  constructor(private auth: authService) {}\n  //emit the messages => verify user my MTN ID\n  //params to receive a command and a role\n  @MessagePattern({ cmd: 'MTN_ID_VERIFICATION', role: ['admin','user','manager'] })\n  async verifyID(id: string) {\n    return await this.auth.FindID(id);\n  }\n  @MessagePattern({ cmd: 'MTN_ID_ACCESS_TOKEN_VERIFCATION' })\n  jwtVerification(id: string) {\n    return this.auth.validateToken(id);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { HttpStatus, Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { authEntity } from \"../entity/entity.container/auth.entity\";\nimport { JwtService } from \"@nestjs/jwt\";\n@Injectable()\nexport class authService {\n  constructor(\n    @Inject(\"AUTH_REPO\") private auth: typeof authEntity,\n    private jwtService: JwtService\n  ) {}\n  async FindID(MTN_ID: string): Promise<authEntity | any> {\n    const user = await this.auth.findOne({ where: { MTN_ID } });\n    if (!user) {\n      return {\n        status: {\n          code: HttpStatus.FORBIDDEN,\n          error: [\"INVALID ACCESS TOKEN PROVIDED\"],\n          MTN_ID: MTN_ID,\n        },\n      };\n    }\n    return { access_token: await this.jwtService.signAsync({ sub: user }) };\n  }\n  async validateToken(MTN_ID: string): Promise<any> {\n    try {\n      const decode = await this.jwtService.verify(MTN_ID);\n      if (decode) return { valid: true };\n    } catch(error) {\n      Logger.error(error)\n      Logger.log(error)\n      return {\n        status: {\n          code: HttpStatus.CONFLICT,\n          error: error,\n        },\n      };\n    }\n  }\n}\n","import { authEntity } from '../entity/entity.container/auth.entity';\nexport const AuthRepo = [\n  {\n    provide: 'AUTH_REPO',\n    useValue: authEntity,\n  },\n];\n","import { DataTypes } from \"sequelize\";\nimport { Column, Model, PrimaryKey, Table } from \"sequelize-typescript\";\n@Table({\n  tableName: \"authentication\",\n  schema: 'auth'\n\n})\nexport class authEntity extends Model<authEntity> {\n  @PrimaryKey\n  @Column({\n    type: DataTypes.STRING,\n  })\n  public MTN_ID!: string;\n  @Column({\n    type: DataTypes.STRING,\n  })\n  public Name!: string;\n}\n","module.exports = require(\"sequelize\");","module.exports = require(\"sequelize-typescript\");","import { Sequelize } from \"sequelize-typescript\";\nimport { Entities } from \"../entity/entities\";\nimport { ConfigService } from \"@nestjs/config\";\nexport const DbConnector = [\n  {\n    provide: \"SEQUELIZE\",\n    import: [ConfigService],\n    useFactory: async (config: ConfigService) => {\n      const sequelize = new Sequelize({\n        dialect: \"postgres\",\n        host: process.env[\"HOST\"],\n        port: parseInt(<string>process.env[\"PORT\"]),\n        username: process.env[\"NAME\"],\n        password: process.env[\"PASSWORD\"],\n        database: process.env[\"DATABASE\"],\n        standardConformingStrings: false,\n        dialectOptions: {\n          clientMinMessages: \"ignore\",\n        },\n        define: {\n          freezeTableName: true,\n          createdAt: false,\n          updatedAt: false,\n        },\n      });\n      sequelize.addModels(Entities);\n      return sequelize;\n    },\n  },\n];\n","import { authEntity } from \"./entity.container/auth.entity\";\n\nexport const Entities = [ \n    authEntity\n]","module.exports = require(\"@nestjs/config\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\nimport { NestFactory } from \"@nestjs/core\";\nimport { AppModule } from \"./app/app.module\";\nimport { Logger, ValidationPipe } from \"@nestjs/common\";\nimport { Transport } from \"@nestjs/microservices\";\nimport { AuthLibraryModule } from \"@kente-mono/auth-library\";\nimport { DocumentBuilder, SwaggerModule } from \"@nestjs/swagger\";\nasync function bootstrap() {\n  //micro services application module \n  const app = await NestFactory.create(AuthLibraryModule);\n  app.connectMicroservice({\n    transport: Transport.TCP,\n    options: {\n      host: \"localhost\",\n      port: 4000,\n    },\n  });\n  //create client app\n  const client = await NestFactory.create(AppModule);\n  //swagger setup details\n  const config = new DocumentBuilder()\n    .setTitle(\"Client authentication microservices - Kente\")\n    .setDescription(\"Microservices api\")\n    .setVersion(\"0.1\")\n    .addTag(\"Kente platform\")\n    .build();\n  const document = SwaggerModule.createDocument(client, config);\n  SwaggerModule.setup(\"api\", client, document);\n  app.useGlobalPipes(new ValidationPipe());\n  await app.startAllMicroservices();\n  await client.listen(3000);\n  Logger.log(\"Auth microservice running\");\n}\nbootstrap();\n"],"names":[],"sourceRoot":""}